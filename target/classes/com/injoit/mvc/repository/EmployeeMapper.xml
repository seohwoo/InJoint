<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.injoit.mvc.repository.EmployeeMapper">

	<insert id="insertEmp" parameterType="employee">
    <selectKey keyProperty="employeenum" resultType="String" order="BEFORE">
        SELECT TO_NUMBER(TO_CHAR(SYSDATE, 'YY') || #{departnum} || LPAD(employee_seq.nextval, 4, '0')) AS employeenum FROM DUAL
    </selectKey>
    insert into employee (employeenum, pw, name, email, phone, addr1, addr2, birth, departnum, position) values (
        #{employeenum}, #{pw}, #{name}, #{email}, #{phone}, #{addr1}, #{addr2}, #{birth}, #{departnum}, #{position})
	</insert>
	<insert id="createCal">
		create table ${id}_cal (
			id varchar2(100) not null,
			start_reg date not null,
			end_reg date not null,
			content varchar2(500) not null,
			status number default 1
		)
	</insert>
	<insert id="insertauth" parameterType="String">
		insert into emp_auth values (#{userid}, #{auth})
	</insert>
	<select id="confirmid" parameterType="String">
		select count(*) from employee where id=#{id}
	</select>
	<insert id="insertCal" parameterType="calendar">
		insert into #{id}_cal (id, start_reg, end_reg, content) values (
			#{id}, #{start_reg}, #{end_reg}, #{content})
	</insert>
	<update id="up_Cal" parameterType="calendar">
		update #{id}_cal set start_reg=#{start_reg}, end_reg=#{end_reg}, content=#{content} where id=#{id}
	</update>
	<update id="up_pro">
		update employee set profile=#{profile} where employeenum=#{id}
	</update>
	<update id="up_emp" parameterType="employee">
		update employee
		<set>
			name=#{name},
			email=#{email},
			phone=#{phone},
			birth=#{birth},
			addr1=#{addr1},
			addr2=#{addr2},
		</set> 
		where employeenum=#{employeenum}
	</update>
	<update id="withdraw">
		update employee set status=0 where id=#{id}
	</update>
	<select id="mypage" resultType="employee">
		select * from employee where employeenum=#{id}
	</select>
	<select id="departname">
		select departname from department where departnum =#{departnum}
	</select>
	<select id="calendar" resultType="calendar">
		select * from #{id}_cal where id=#{id} and status=1
	</select>
	<update id="">
		update #{id}_cal set  where id=#{id}
	</update>
	<select id="profile">
		select profile from employee where employeenum=#{id}
	</select>
	<update id="memout">
		update employee set status = 0 where id=#{id}
	</update>
	<!-- 
	<insert id="vote" parameterType="vote_que">
		insert into vote_que values 
			(bote_que_seq.nextval, #{title}, #{enddate}, #{typenum}, #{employeenum}, #{anonymous})
	</insert>
	-->
	<insert id="vote" parameterType="vote_que">
    <selectKey keyProperty="no" resultType="int" order="BEFORE">
        SELECT bote_que_seq.nextval AS no FROM DUAL
    </selectKey>
    	insert into vote_que values 
        	(#{no}, #{title}, #{enddate}, #{typenum}, #{employeenum}, #{anonymous})
	</insert>
	
	<insert id="vote_count" parameterType="vote_count">
		insert into vote_count (num, no, typevalue, img) values 
			(vote_count_seq.nextval, #{no}, #{typevalue}, #{img})
	</insert>
	<!-- 
	<resultMap type="vote_que" id="vq">
		<result column="no" property="no"/>
		<result column="title" property="title"/>
		<result column="enddate" property="enddate"/>
		<result column="typenum" property="typenum"/>
		<result column="employeenum" property="employeenum"/>
	</resultMap>
	<resultMap type="vote_count" id="vc">
		<result column="num" property="num"/>
		<result column="no" property="no"/>
		<result column="typevalue" property="typevalue"/>
		<result column="img" property="img"/>
		<collection property="vq" resultMap="vq"/>
	</resultMap>
	
	
	<select id="vote_que" resultType="vote_count" resultMap="vc">
		select * from vote_que vq
			join vote_count vc on vq.no = vc.no order by vc.num asc
	</select>
	-->
	
	<select id="vq" resultType="vote_que">
		select * from vote_que where no=#{no}
	</select>
	<select id="vq2" resultType="vote_que">
		select * from vote_que order by no desc
	</select>
	
	<select id="vc" resultType="vote_count">
		select * from vote_count where no=#{no}
	</select>
	
	<select id="departnum">
		select departname from department where departnum = #{departnum}
	</select>
	
	<insert id="vo" parameterType="emp_vote">
		insert into emp_vote values (#{no}, #{employeenum}, #{num})
	</insert>
	
	<select id="noChk">
		select count(*) from emp_vote where no =#{no} and employeenum=#{employeenum}
	</select>
	
	<update id="up_no" parameterType="emp_vote">
		update emp_vote set num=#{num}, employeenum=#{employeenum} where no=#{no} and employeenum=#{employeenum}
	</update>
	
	<select id="votecount">
		select count(*) from emp_vote where no=#{no}
	</select>
	<select id="votename" resultType="employee">
		select * from employee where employeenum in
			(select employeenum from emp_vote where num=#{num})
	</select>
	<select id="memcount">
		select count(*) from emp_vote where num=#{num}
	</select>
	<select id="sel">
		select num from emp_vote where no=#{no} and employeenum=#{employeenum}
	</select>
	<delete id="deldate">
	<![CDATA[ 
		delete from vote_que where enddate < sysdate - 7
	]]>	
	</delete>
	<delete id="delvote">
		delete from vote_que where no=#{no}
	</delete>
	<select id="delimg" resultType="vote_count">
		select img from vote_count where no=#{no}
	</select>
	
	<select id="myAttendanceCnt" parameterType="hashmap" resultType="int">
		select count(*) from emp_attendance where employeenum = #{employeenum}
	</select>
	
	<select id="showMyAttendance" parameterType="hashmap" resultType="empAttendance">
	<![CDATA[ 
		SELECT ea.*, e.name
			FROM (
			    SELECT emp.*, ROWNUM r
			    FROM (
			        SELECT *
			        FROM emp_attendance
			    ) emp
			    WHERE ROWNUM <= #{end} and employeenum = #{employeenum} order by onwork desc
			) ea
			JOIN employee e ON ea.employeenum = e.employeenum
			WHERE ea.r >= #{start}
		]]>	
	</select>
	
</mapper>